version: "3.8"
services:
  nodeserver:
    build:
      context: ./app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nodeserver.rule=Host(`nodeserver.server-nat.duckdns.org`)"
      - "traefik.http.routers.nodeserver.entrypoints=websecure"
      - "traefik.http.routers.nodeserver.tls.certresolver=myresolver"
    ports:
      - "5000:5000"
    networks:
      - network_serveur

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nodeserver.rule=Host(`influxdb.server-nat.duckdns.org`)"
      - "traefik.http.routers.nodeserver.entrypoints=websecure"
      - "traefik.http.routers.nodeserver.tls.certresolver=myresolver"
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=my-org
      - DOCKER_INFLUXDB_INIT_BUCKET=my-bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-secret-token
    volumes:
      - influxdb-storage:/var/lib/influxdb2
    networks:
        - network_serveur

  poke:
    image: alpine:latest
    container_name: poke
    volumes:
      - ./poke:/usr/src/app
    working_dir: /usr/src/app
    command: ["sh", "-c", "apk add --no-cache curl && sh poke.sh"]
    depends_on:
      - influxdb
    networks:
        - network_serveur

  db:
    image: mysql
    container_name: database
    command: 
        --init-file /docker-entrypoint-initdb.d/init.sql
    restart: always
    environment:
        MYSQL_USER: mysql
        MYSQL_ROOT_PASSWORD: matias
    volumes:
        - ./mysql-scripts:/docker-entrypoint-initdb.d
    networks:
        - network_serveur

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nodeserver.rule=Host(`adminer.server-nat.duckdns.org`)"
      - "traefik.http.routers.nodeserver.entrypoints=websecure"
      - "traefik.http.routers.nodeserver.tls.certresolver=myresolver"
    ports:
        - 8089:8080
    networks:
        - network_serveur
    
  traefik:
    image: traefik:v2.9
    container_name: traefik
    ports:
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "8080:8080" # Traefik Dashboard
    networks:
      - network_serveur
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml
      - ./traefik/acme.json:/etc/traefik/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.server-nat.duckdns.org`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"

networks:
  network_serveur:
    driver: bridge

volumes:
  influxdb_data:
  influxdb-storage:
  